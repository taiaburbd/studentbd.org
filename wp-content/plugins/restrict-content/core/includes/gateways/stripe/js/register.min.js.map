{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./core/includes/gateways/stripe/js/register.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rcpStripeHandlePaymentFailure","payment_id","message","jQuery","ajax","type","dataType","url","rcp_script_options","ajaxurl","data","action","success","response","rcpStripeCloseCheckoutModal","rcp_processing","let","$","modalWrapper","modalContainer","fadeOut","hide","document","getElementById","rcpStripe","elements","card","unmount","RCP_Stripe_Registration","hasPaymentMethod","paymentMethodID","init","on","mountElements","maybeBlockSubmit","handlePayment","launchModal","e","gateway","rcpStripeUpdateElementStyles","mount","addEventListener","event","complete","setPaymentMethodID","rcpStripeToggleElementErrors","savedPaymentMethod","val","removeClass","show","addClass","this","parents","trigger","rcp_get_gateway","stopPropagation","rcpStripeHandleError","enter_card_details","form","slug","total","recurring_total","auto_renew","hasClass","stripe_client_secret","error_occurred","args","cardHolderName","handler","stripe_intent_type","payment_method","billing_details","client_secret","Stripe","then","paymentResult","error","code","rcp_submit_registration_form","preventDefault","fadeIn","registerButton","find","text","keyCode","mouseup","is","target","has","length"],"mappings":"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","file":"register.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global rcpStripe, rcp_processing, rcp_script_options */\n\n/**\n * Unblock the form, hide loading symbols, and enable registration button.\n */\nfunction rcpStripeEnableForm() {\n\tjQuery( '#rcp_registration_form #rcp_submit' ).attr( 'disabled', false );\n\tjQuery( '#rcp_ajax_loading' ).hide();\n\tjQuery( '#rcp_registration_form' ).unblock();\n\tjQuery( '#rcp_submit' ).val( rcp_script_options.register );\n\n\trcp_processing = false;\n}\n\n/**\n * Handle a failed Stripe payment\n *\n * This does an ajax request to trigger `rcp_registration_failed`, which changes the payment\n * status to `failed` and disables the pending membership.\n *\n * @param {int} payment_id\n * @param {string} message\n *\n * @since 3.2\n */\nfunction rcpStripeHandlePaymentFailure( payment_id, message ) {\n\n\tlet $ = jQuery;\n\n\t$.ajax( {\n\t\ttype: 'post',\n\t\tdataType: 'json',\n\t\turl: rcp_script_options.ajaxurl,\n\t\tdata: {\n\t\t\taction: 'rcp_stripe_handle_initial_payment_failure',\n\t\t\tpayment_id: payment_id,\n\t\t\tmessage: message\n\t\t},\n\t\tsuccess: function ( response ) { }\n\t} );\n\n}\n\n/**\n * Close the Stripe Checkout modal.\n *\n * @since 3.2\n */\nfunction rcpStripeCloseCheckoutModal() {\n\t// Don't allow closing if we're already processing the form.\n\tif ( rcp_processing ) {\n\t\treturn;\n\t}\n\n\tlet $ = jQuery;\n\tlet modalWrapper = $( '.rcp-modal-wrapper' );\n\tlet modalContainer = $( '.rcp-modal' );\n\n\tmodalWrapper.fadeOut( 250 );\n\tmodalContainer.hide();\n\n\tif ( ! document.getElementById( 'rcp-card-element' ) ) {\n\t\treturn;\n\t}\n\n\t// Unmount Stripe Elements.\n\trcpStripe.elements.card.unmount( '#rcp-card-element' );\n}\n\n/**\n * Handles a Stripe payment / setup intent, dynamically factoring in:\n *      - Saved vs new payment method\n *      - Setup Intent vs Payment Intent\n *\n * @param {string}  handler              Stripe handler to call - either `handleCardPayment` or `confirmCardSetup`.\n * @param {string}  client_secret        Client secret to pass into the function.\n * @param {object}  args                 Arguments to pass into the function. For a saved payment method this\n *                                       should contain the payment method ID. For a new payment method this\n *                                       might contain the billing card name.\n *\n * @since 3.3\n * @return {Promise}\n */\nfunction rcpStripeHandleIntent( handler, client_secret, args ) {\n\treturn rcpStripe.Stripe[ handler ]( client_secret, args );\n}\n\n// Reliant on jQuery triggers, so setup jQuery.\njQuery( function( $ ) {\n\n\tvar RCP_Stripe_Registration = {\n\n\t\t/**\n\t\t * Whether or not a payment method has been filled out.\n\t\t */\n\t\thasPaymentMethod: false,\n\n\t\t/**\n\t\t * ID of the saved payment method, or `false` if using a new card.\n\t\t */\n\t\tpaymentMethodID: false,\n\n\t\t/**\n\t\t * Initialize all our events\n\t\t */\n\t\tinit: function() {\n\t\t\t$( 'body' ).on( 'rcp_gateway_loaded', RCP_Stripe_Registration.mountElements );\n\t\t\t$( '#rcp_submit' ).on( 'click', RCP_Stripe_Registration.maybeBlockSubmit );\n\t\t\t$( 'body' ).on( 'rcp_registration_form_processed', RCP_Stripe_Registration.handlePayment );\n\t\t\t$( 'body' ).on( 'click', '.rcp-stripe-register-submit-button', RCP_Stripe_Registration.launchModal );\n\t\t},\n\n\t\t/**\n\t\t * Attempt to mount the Stripe Elements card when the gateway changes.\n\t\t *\n\t\t * @param e\n\t\t * @param gateway\n\t\t */\n\t\tmountElements: function ( e, gateway ) {\n\t\t\tif ( ! document.getElementById( 'rcp-card-element' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update element styles.\n\t\t\trcpStripeUpdateElementStyles( rcpStripe.elements.card, '.rcp_card_name' );\n\n\t\t\t// Field is available, mount.\n\t\t\trcpStripe.elements.card.mount( '#rcp-card-element' );\n\n\t\t\t// Flag as having card details.\n\t\t\trcpStripe.elements.card.addEventListener( 'change', function ( event ) {\n\t\t\t\tif ( event.complete ) {\n\t\t\t\t\tRCP_Stripe_Registration.hasPaymentMethod = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t/**\n\t\t\t * Listen for selected payment method changing.\n\t\t\t */\n\t\t\tRCP_Stripe_Registration.setPaymentMethodID();\n\n\t\t\t// Handle errors.\n\t\t\trcpStripe.elements.card.addEventListener( 'change', rcpStripeToggleElementErrors );\n\t\t},\n\n\t\t/**\n\t\t * Set the current payment method ID and listen for changes.\n\t\t */\n\t\tsetPaymentMethodID: function() {\n\t\t\tlet savedPaymentMethod = $( 'input[name=\"rcp_gateway_existing_payment_method\"]' );\n\t\t\tsavedPaymentMethod.on( 'change', function( e ) {\n\t\t\t\trcpStripeToggleElementErrors( e ); // clear errors\n\t\t\t\tlet value = $( 'input[name=\"rcp_gateway_existing_payment_method\"]:checked' ).val();\n\t\t\t\t$( '.rcp-gateway-saved-payment-method, .rcp-gateway-add-payment-method-wrap' ).removeClass( 'rcp-gateway-selected-payment-method' );\n\t\t\t\tif ( 'new' === value ) {\n\t\t\t\t\t$( '.rcp-gateway-new-card-fields' ).show();\n\t\t\t\t\t$( '.rcp-gateway-add-payment-method-wrap' ).addClass( 'rcp-gateway-selected-payment-method' );\n\t\t\t\t\tRCP_Stripe_Registration.paymentMethodID = false;\n\t\t\t\t} else {\n\t\t\t\t\t$( '.rcp-gateway-new-card-fields' ).hide();\n\t\t\t\t\t$( this ).parents( '.rcp-gateway-saved-payment-method' ).addClass( 'rcp-gateway-selected-payment-method' );\n\t\t\t\t\tRCP_Stripe_Registration.paymentMethodID = value;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tsavedPaymentMethod.trigger( 'change' );\n\t\t},\n\n\t\t/**\n\t\t * Block the form submission if Stripe is the selected gateway, payment is due, a new payment method is being\n\t\t * entered, but no details have been provided.\n\t\t *\n\t\t * @param e\n\t\t * @returns {boolean}\n\t\t */\n\t\tmaybeBlockSubmit: function ( e ) {\n\t\t\tif ( 'stripe' === rcp_get_gateway().val() && document.getElementById( 'rcp-card-element' ) && ! RCP_Stripe_Registration.hasPaymentMethod && ! RCP_Stripe_Registration.paymentMethodID ) {\n\t\t\t\te.stopPropagation();\n\t\t\t\trcpStripeHandleError( rcp_script_options.enter_card_details );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * After registration has been processed, handle card payments.\n\t\t *\n\t\t * @param event\n\t\t * @param form\n\t\t * @param response\n\t\t */\n\t\thandlePayment: function ( event, form, response ) {\n\t\t\t// Not on Stripe gateway, bail.\n\t\t\tif ( response.gateway.slug !== 'stripe' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Bail if the amount due today is 0 AND:\n\t\t\t * the recurring amount is 0, or auto renew is off\n\t\t\t */\n\t\t\tif ( ! response.total && ( ! response.recurring_total || ! response.auto_renew ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// 100% discount, bail.\n\t\t\tif ( $( '.rcp_gateway_fields' ).hasClass( 'rcp_discounted_100' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Trigger error if we don't have a client secret.\n\t\t\tif ( ! response.gateway.data.stripe_client_secret ) {\n\t\t\t\trcpStripeHandleError( rcp_script_options.error_occurred );\n\t\t\t\trcpStripeHandlePaymentFailure( response.payment_id, rcp_script_options.error_occurred );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet cardHolderName = $( '.card-name' ).val();\n\n\t\t\tlet handler = 'payment_intent' === response.gateway.data.stripe_intent_type ? 'confirmCardPayment' : 'confirmCardSetup';\n\t\t\tlet args = {\n\t\t\t\tpayment_method: {\n\t\t\t\t\tcard: rcpStripe.elements.card,\n\t\t\t\t\tbilling_details: { name: cardHolderName }\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( RCP_Stripe_Registration.paymentMethodID ) {\n\t\t\t\targs = {\n\t\t\t\t\tpayment_method: RCP_Stripe_Registration.paymentMethodID\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handle payment intent / setup intent.\n\t\t\t */\n\t\t\trcpStripeHandleIntent(\n\t\t\t\thandler, response.gateway.data.stripe_client_secret, args\n\t\t\t).then( function( paymentResult ) {\n\t\t\t\tif ( paymentResult.error ) {\n\t\t\t\t\trcpStripeHandleError( paymentResult.error.message, paymentResult.error.code );\n\t\t\t\t\trcpStripeHandlePaymentFailure( response.payment_id, paymentResult.error.message );\n\t\t\t\t} else {\n\t\t\t\t\trcp_submit_registration_form( form, response );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Launch the [register_form_stripe] modal.\n\t\t *\n\t\t * @param e\n\t\t */\n\t\tlaunchModal: function( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tlet modalWrapper = $( '.rcp-modal-wrapper' );\n\t\t\tlet modalContainer = $( '.rcp-modal' );\n\t\t\tlet form = $( this ).parents( '.rcp-stripe-register' );\n\n\t\t\t// Mount the Stripe Elements card.\n\t\t\tif ( ! document.getElementById( 'rcp-card-element' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fade in wrapper.\n\t\t\tmodalWrapper.fadeIn( 250 );\n\n\t\t\t// Field is available, mount.\n\t\t\trcpStripe.elements.card.mount( '#rcp-card-element' );\n\n\t\t\tlet registerButton = modalContainer.find( 'input.rcp-modal-submit' );\n\n\t\t\t// Flag as having card details.\n\t\t\trcpStripe.elements.card.addEventListener( 'change', function ( event ) {\n\t\t\t\tif ( event.complete ) {\n\t\t\t\t\tRCP_Stripe_Registration.hasPaymentMethod = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Handle errors.\n\t\t\trcpStripe.elements.card.addEventListener( 'change', rcpStripeToggleElementErrors );\n\n\t\t\t// Set up saved vs. new card.\n\t\t\tRCP_Stripe_Registration.setPaymentMethodID();\n\n\t\t\t// Set form content.\n\t\t\tif ( form.data( 'name' ) ) {\n\t\t\t\t$( '.rcp-modal-membership-name' ).text( form.data( 'name' ) ).show();\n\t\t\t}\n\t\t\tif ( form.data( 'description' ) ) {\n\t\t\t\t$( '.rcp-modal-membership-description' ).text( form.data( 'description' ) ).show();\n\t\t\t}\n\t\t\tif ( form.data( 'panel-label' ) ) {\n\t\t\t\tregisterButton.val( form.data( 'panel-label' ) );\n\t\t\t}\n\t\t\tif ( form.data( 'level-id' ) ) {\n\t\t\t\tmodalContainer.find( '#rcp-stripe-checkout-level-id' ).val( form.data( 'level-id' ) );\n\t\t\t}\n\n\t\t\t// Fade in container.\n\t\t\tmodalContainer.fadeIn( 250 );\n\n\t\t\t/**\n\t\t\t * Close the modal on these three events...\n\t\t\t */\n\n\t\t\t// If they click the close icon, close modal.\n\t\t\tmodalWrapper.find( '.rcp-modal-close' ).on( 'click', function() {\n\t\t\t\trcpStripeCloseCheckoutModal();\n\t\t\t} );\n\n\t\t\t// If they press \"ESC\" on the keyboard, close modal.\n\t\t\t$( document ).on( 'keydown', function ( e ) {\n\t\t\t\tif ( 27 === e.keyCode ) {\n\t\t\t\t\trcpStripeCloseCheckoutModal();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// If they click outside the container, close modal.\n\t\t\t$( document ).mouseup( function( e ) {\n\t\t\t\tif ( ! modalContainer.is( e.target ) && modalContainer.has( e.target ).length === 0 ) {\n\t\t\t\t\trcpStripeCloseCheckoutModal();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t};\n\tRCP_Stripe_Registration.init();\n} );\n"],"sourceRoot":""}